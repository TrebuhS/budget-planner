{"ast":null,"code":"var _jsxFileName = \"/Users/trebuh/Sites/projects/home_budget_planner/front/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(false);\n\n  const checkIfLoggedIn = () => {\n    if (localStorage.getItem(\"token\")) {\n      axios.post(process.env.REACT_APP_API_URL + \"users/auth\", {\n        token: localStorage.getItem(\"token\")\n      }).then(res => {\n        setIsLogged(true);\n        console.log(\"Success: \" + res);\n      }).catch(res => {\n        setIsLogged(false);\n        console.log(\"Error: \" + isLogged);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, checkIfLoggedIn() === true ? /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }) : \"Not Logged In\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/trebuh/Sites/projects/home_budget_planner/front/src/App.js"],"names":["React","useEffect","useState","axios","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","useLocation","App","isLogged","setIsLogged","checkIfLoggedIn","localStorage","getItem","post","process","env","REACT_APP_API_URL","token","then","res","console","log","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,UANF,EAOEC,WAPF,QAQO,kBARP;;AAUA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMa,eAAe,GAAG,MAAM;AAC5B,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCd,MAAAA,KAAK,CAACe,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,YAA3C,EAAyD;AAACC,QAAAA,KAAK,EAAEN,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAR,OAAzD,EACKM,IADL,CACWC,GAAD,IAAS;AACbV,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,GAA1B;AACD,OAJL,EAKKG,KALL,CAKYH,GAAD,IAAS;AACdV,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYb,QAAxB;AACD,OARL;AASD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIE,eAAe,OAAO,IAAtB,gBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGC,eAJL,CADF,CADF,CADF;AAcD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(false);\n\n  const checkIfLoggedIn = () => {\n    if (localStorage.getItem(\"token\")) {\n      axios.post(process.env.REACT_APP_API_URL + \"users/auth\", {token: localStorage.getItem(\"token\")})\n          .then((res) => {\n            setIsLogged(true);\n            console.log(\"Success: \" + res);\n          })\n          .catch((res) => {\n            setIsLogged(false);\n            console.log(\"Error: \" + isLogged)\n          })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          { checkIfLoggedIn() === true ?\n            ( <Route/> )\n            :\n            (\"Not Logged In\")\n          }\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}